import sys

input = sys.stdin.readline

def check(num):
    global ans
    y, x = dic[num]

    for j in range(n):
        for k in range(m):

            now = 0
            for i in range(4):
                ny = y[i] + j
                nx = x[i] + k

                # 레인지 밖으로 나간다면
                if ny < 0 or ny >= n or nx < 0 or nx >= m:
                    break
                else:
                    now += data[ny][nx]
            # return이 안됐을 경우
            ans = max(ans, now)



# 세로 n, 가로 m
n, m = map(int, input().split())

data = [list(map(int, input().split())) for _ in range(n)]

'''
테트로미노를 dic로 만들어서 걍 완전탐색으로 돌린다.
'''
dic = {
    0: [[0, 0, 0, 0], [0, 1, 2, 3]],
    1: [[0, 0, 1, 1], [0, 1, 0, 1]],
    2: [[0, 1, 2, 2], [0, 0, 0, 1]],
    3: [[0, 1, 1, 2], [0, 0, 1, 1]],
    4: [[0, 0, 0, 1], [0, 1, 2, 1]],
    # 0번째 회전
    5: [[0, 1, 2, 3], [0, 0, 0, 0]],
    # 2번째 회전
    6: [[1, 0, 0, 0], [0, 0, 1, 2]],
    7: [[0, 0, 1, 2], [0, 1, 1, 1]],
    8: [[1, 1, 1, 0], [0, 1, 2, 2]],
    # 2번째 대칭
    13: [[0, 1, 2, 2], [0, 0, 0, -1]],
    14 : [[1, 0, 0, 0], [0, 0, -1, -2]],
    15: [[0, 0, 1, 2], [0, -1, -1, -1]],
    16: [[1, 1, 1, 0], [0, -1, -2, -2]],
    # 3번째 회전
    9: [[0, 0, 1, 1], [1, 2, 0, 1]],
    # 3번째 대칭
    17: [[0, 1, 1, 2], [0, 0, -1, -1]],
    18: [[0, 0, 1, 1], [-1, -2, 0, -1]],

    # 4번째 회전
    10: [[0, 1, 1, 2], [1, 0, 1, 1]],
    11: [[1, 1, 1, 0], [0, 1, 2, 1]],
    12: [[0, 1, 1, 2], [0, 0, 1, 0]],

    # 4번째 대칭
    19: [[0, 0, 0, 1], [0, -1, -2, -1]],
    20: [[0, 1, 1, 2], [-1, 0, -1, -1]],
    21: [[1, 1, 1, 0], [0, -1, -2, -1]],
    22: [[0, 1, 1, 2], [0, 0, -1, 0]],
}

ans = 0

for i in range(23):
    check(i)

print(ans)


